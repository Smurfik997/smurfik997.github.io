{"version":3,"sources":["App.js","index.js"],"names":["Mobile","React","createContext","Graph","props","nodeUpdate","index","newPosition","setState","state","nodes","left","top","nodeDelete","edges","forEach","edge","indexEdge","i","length","splice","crosshair","display","edgeDelete","crosshairState","x","y","paintAlgo","colorSeed","nodesCount","matrix","Array","fill","_","node","push","n","k","color","max","j","painted","freeNode","textColor","Math","min","colorSeedUpdate","newColorSeed","drag","e","target","_this","callback","TouchEndEvent","document","ontouchend","TouchMoveEvent","ontouchmove","mobile","style","cursor","crosshairPos","scale","offsetLeft","clientWidth","offsetTop","clientHeight","pointerPos","touches","pageX","pageY","preventDefault","pos","className","parseInt","innerText","onmousemove","onmouseup","position","this","v1","v2","Error","Provider","value","id","DOMElement","map","key","update","delete","enable","Component","Node","backgroundColor","onTouchStart","onMouseDown","context","onDoubleClick","tabIndex","contextType","Edge","angle","atan","PI","height","sqrt","cos","sin","transform","Crosshair","EdgeBar","focusOut","persist","relatedTarget","current","tagName","graph","querySelector","addEdge","body","createRef","onSubmit","ref","placeholder","onFocus","select","setAttribute","onBlur","onClick","PaintButton","ReactDOM","render","window","navigator","maxTouchPoints","longTouch","onmousedown","altKey","addNode","ondblclick","ontouchstart","setTimeout","event","createEvent","initEvent","dispatchEvent","clearTimeout"],"mappings":"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","file":"static/js/main.3e8c3d99.chunk.js","sourcesContent":["import React from 'react';\n\nconst Mobile = React.createContext();\n\n//=================================================================================\n//=================================================================================\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'nodes': [],\n            'edges': [],\n            'crosshair': {\n                'enable': true,\n                'display': false,\n                'top': 0,\n                'left': 0\n            },\n            'colorSeed': [\n                [1867, 4931, 6073],\n                131,\n                110,\n                80\n            ],\n            'mobile': false,\n            'scale': 2.7\n        }\n    }\n\n    addNode(position = [0, 0]) {\n        this.setState((state) => {\n            state.nodes.push({\n                left: position[0] > 0? position[0] : 0,\n                top: position[1] > 0? position[1] : 0\n            });\n\n            return state;\n        });\n    }\n\n    addEdge(v1, v2) {\n        if (this.state.nodes[v1] && this.state.nodes[v2] && v1 !== v2) {\n            this.setState((state) => {\n                state.edges.push([v1, v2]);\n\n                return state;\n            });\n            return 'success';\n        }\n\n        throw Error('Саша ИЗВИНИ');\n    }\n\n    nodeUpdate = (index, newPosition) => {\n        this.setState((state) => {\n            state.nodes[index].left = newPosition[0];\n            state.nodes[index].top = newPosition[1];\n\n            return state;\n        });\n    }\n\n    nodeDelete = (index) => {\n        this.setState((state) => {\n            state.edges.forEach((edge, indexEdge) => {\n            if (edge[0] === index || edge[1] === index)\n                state.edges[indexEdge] = null;\n            })\n\n            let i = 0\n            while (i < state.edges.length) {\n                if (state.edges[i] === null) state.edges.splice(i, 1); else i++;\n            }\n\n            state.nodes[index] = null;\n            state.crosshair.display = false;\n\n            return state;\n        });\n    }\n\n    edgeDelete = (index) => {\n        this.setState((state) => {\n            state.edges.splice(index, 1);\n\n            return state;\n        });\n    }\n\n    crosshair = (crosshairState, x, y) => {\n        this.setState((state) => {\n            if (x) state.crosshair.left = x;\n            if (y) state.crosshair.top = y;\n            state.crosshair.display = crosshairState;   \n\n            return state;\n        });\n    }\n\n    paintAlgo = () => {\n        const colorSeed = this.state.colorSeed;\n\n        let nodes = [],\n            nodesCount = this.state.nodes.length,\n            edges = this.state.edges;\n        let matrix = new Array(nodesCount).fill(0);\n        matrix.forEach((_, i) => matrix[i] = new Array(nodesCount));\n\n        edges.forEach((edge) => {\n            matrix[edge[0]][edge[1]] = 1;\n            matrix[edge[1]][edge[0]] = 1;\n        })\n\n        this.state.nodes.forEach((node, i) => {\n            if (node) {\n                nodes.push(node);\n                let n = 0;\n\n                for (let k = 0; k < nodesCount; k++)\n                    if (matrix[i][k] === 1) n++;\n\n                nodes[nodes.length - 1].color = null;\n                nodes[nodes.length - 1].index = i;\n                nodes[nodes.length - 1].n = n;\n            }\n        });\n\n        for (let i = 0; i < nodes.length; i++) {\n            let max = i;\n\n            for (let j = i + 1; j < nodes.length; j++)\n                if (nodes[max].n < nodes[j].n) max = j;\n\n            [nodes[i], nodes[max]] = [nodes[max], nodes[i]];\n        }\n\n        let color = 1, painted = 0;\n        \n        while (painted < nodes.length) {\n            painted = 0;\n\n            for (let i = 0; i < nodes.length; i++) {\n                if (!nodes[i].color) {\n                    let freeNode = true;\n\n                    for (let j = 0; j < nodes.length; j++) {\n                        if (nodes[j].color && nodes[j].color === color && matrix[nodes[i].index][nodes[j].index] === 1) {\n                            freeNode = false;\n                            break;\n                        }\n                    }\n\n                    if (freeNode) nodes[i].color = color;\n                } else painted++;\n            }\n\n            color++;\n        }\n\n        nodes.forEach((node, i) => {\n            nodes[i].color = [\n                colorSeed[0][0] * node.color % colorSeed[1] + colorSeed[2], \n                colorSeed[0][1] * node.color % colorSeed[1] + colorSeed[2], \n                colorSeed[0][2] * node.color % colorSeed[1] + colorSeed[2]\n            ];\n            nodes[i].textColor = [\n                Math.min(nodes[i].color[0] + colorSeed[3], 255), \n                Math.min(nodes[i].color[1] + colorSeed[3], 255), \n                Math.min(nodes[i].color[2] + colorSeed[3], 255)\n            ];\n        });\n        this.setState({nodes: this.state.nodes});\n\n        return color - 2;\n    }\n\n    colorSeedUpdate = (newColorSeed) => {\n        this.setState({colorSeed: newColorSeed});\n        this.paintAlgo();\n    }\n\n    drag = (e, target, _this, callback, crosshairState = false) => {\n        const TouchEndEvent = document.ontouchend,\n                TouchMoveEvent = document.ontouchmove;\n        \n        if (this.state.mobile !== true) target.style.cursor = 'grabbing';\n        let crosshairPos = [0, 0],\n            scale = 1.0;\n\n        if (this.state.mobile === true) scale *= this.state.scale;\n\n        if (crosshairState) {\n            crosshairPos[0] = target.offsetLeft + target.clientWidth / 2 - 0.8 * scale;\n            crosshairPos[1] = target.offsetTop + target.clientHeight / 2 - 0.8 * scale;\n            this.crosshair(true, crosshairPos[0], crosshairPos[1], target);\n        }\n\n        if (this.state.mobile === true) {\n            const pointerPos = [\n                e.touches[0].pageX - target.offsetLeft,\n                e.touches[0].pageY - target.offsetTop\n            ];\n\n            document.ontouchmove = (e) => {\n                e.preventDefault();\n                let pos = [e.touches[0].pageX - pointerPos[0], e.touches[0].pageY - pointerPos[1]];\n                if ((pos[0] < 0 || pos[1] < 0) && target.className === 'Node') {\n                    this.nodeDelete(parseInt(target.innerText));\n                } else {\n                    if (pos[0] < 0) pos[0] = 0;\n                    if (pos[1] < 0) pos[1] = 0;\n                    crosshairPos[0] = pos[0] + target.clientWidth / 2 - 0.8 * scale;\n                    crosshairPos[1] = pos[1] + target.clientHeight / 2 - 0.8 * scale;\n                    if (crosshairState) this.crosshair(true, crosshairPos[0], crosshairPos[1]);\n                    callback(_this, pos);\n                }\n            }\n            \n            document.ontouchend = (e) => {\n                if (crosshairState) this.crosshair(false);\n                document.ontouchmove = TouchMoveEvent;\n                document.ontouchend = TouchEndEvent;\n            }\n        } else {\n            const pointerPos = [\n                e.pageX - target.offsetLeft,\n                e.pageY - target.offsetTop\n            ];\n\n            document.onmousemove = (e) => {\n                let pos = [e.pageX - pointerPos[0], e.pageY - pointerPos[1]];\n                if (pos[0] < 0) pos[0] = 0;\n                if (pos[1] < 0) pos[1] = 0;\n                crosshairPos[0] = pos[0] + target.clientWidth / 2 - 0.8 * scale;\n                crosshairPos[1] = pos[1] + target.clientHeight / 2 - 0.8 * scale;\n                if (crosshairState) this.crosshair(true, crosshairPos[0], crosshairPos[1]);\n                callback(_this, pos);\n            }\n\n            document.onmouseup = (e) => {\n                target.style.cursor = 'grab';\n                if (crosshairState) this.crosshair(false);\n                document.onmousemove = () => {}\n                document.onmouseup = () => {}\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Mobile.Provider value={{\n                mobile: this.state.mobile,\n                scale: this.state.scale\n            }}>\n                <div id={this.props.DOMElement['Nodes']}>\n                    {this.state.nodes.map((node, index) => {\n                        return node? <Node\n                            key={index} \n                            index={index} \n                            nodes={this.state.nodes} \n                            update={this.nodeUpdate} \n                            delete={this.nodeDelete}\n                            drag={this.drag}\n                            color={node.color}\n                            textColor={node.textColor}\n                        /> : null;\n                    })}\n                </div>\n                <div id={this.props.DOMElement['Edges']}>\n                    {this.state.edges.map((edge, index) => <Edge\n                        key={index} \n                        index={index} \n                        delete={this.edgeDelete}\n                        v1={this.state.nodes[edge[0]]} \n                        v2={this.state.nodes[edge[1]]}\n                    />)}\n                </div>\n                {this.state.crosshair.enable && this.state.crosshair.display? <Crosshair\n                    left={this.state.crosshair.left}\n                    top={this.state.crosshair.top}\n                    target={this.state.crosshair.target}\n                /> : null}\n            </Mobile.Provider>\n        )\n    }\n}\n\n//=================================================================================\n//=================================================================================\n\nclass Node extends React.Component {\n    static contextType = Mobile;\n\n    constructor(props) {\n        super(props);\n    }\n\n    drag = (e) => {\n        this.props.drag(e, e.target, this, (_this, pos) => {\n            _this.props.update(this.props.index, [pos[0], pos[1]]);\n        }, true)\n    }\n    \n    render() {\n        const color = this.props.color,\n                textColor = this.props.textColor;\n\n        return (\n            <div\n                className='Node'\n                style={{\n                    left: this.props.nodes[this.props.index].left,\n                    top: this.props.nodes[this.props.index].top,\n                    backgroundColor: color? `rgb(${color[0]}, ${color[1]}, ${color[2]})`: '',\n                    color: textColor? `rgb(${textColor[0]}, ${textColor[1]}, ${textColor[2]})`: ''\n                }}\n                onTouchStart={this.drag}\n                onMouseDown={(e) => {\n                    if (!this.context.mobile) this.drag(e);\n                }}\n                onDoubleClick={(e) => {\n                    e.preventDefault();\n                    this.props.delete(this.props.index)}\n                }\n                tabIndex=\"3\"\n            >\n                {this.props.index}\n            </div> \n        )\n    }\n}\n\n//=================================================================================\n//=================================================================================\n\nclass Edge extends React.Component {\n    static contextType = Mobile;\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let [v1, v2] = [this.props.v1, this.props.v2];\n        const [x, y] = [v1.left - v2.left, v1.top - v2.top];\n        let angle = Math.atan(y / x);\n        if (x >= 0) angle += Math.PI;\n        angle -= Math.PI / 2;\n\n        let scale = 1.0;\n        if (this.context.mobile === true) scale *= this.context.scale;\n\n        return (\n            <div\n                className='Edge'\n                style={{\n                    height: Math.sqrt(x*x + y*y),\n                    left: v1.left + 27 * scale / 2 - 2 * Math.cos(angle) * scale,\n                    top: v1.top + 27 * scale / 2 - 2 * Math.sin(angle) * scale,\n                    transform: `rotate(${angle}rad)`\n                }}\n                onDoubleClick={() => this.props.delete(this.props.index)}\n            />\n        )\n    }\n}\n\n//=================================================================================\n//=================================================================================\n\nclass Crosshair extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"crosshairVert\" style={{left: this.props.left}}/>\n                <div id=\"crosshairHorizontal\" style={{top: this.props.top}}/>\n            </div>\n        )\n    }\n}\n\n//=================================================================================\n//=================================================================================\n\nclass EdgeBar extends React.Component {\n    constructor(props) {\n        super(props);\n        let scale = 1.0;\n        if (this.props.graph.state.mobile === true) scale *= this.props.graph.state.scale;\n\n        this.state = {\n            left: this.props.graph.state.mobile? document.body.clientWidth - 130 * scale : (document.body.clientWidth - 120) / 2,\n            top: 10 * scale\n        }\n        this.v1 = React.createRef();\n        this.v2 = React.createRef();\n    }\n\n    focusOut = (e, index) => {\n        e.persist();\n        //alert(e.relatedTarget);\n\n        if (e.relatedTarget && e.relatedTarget.className === \"Node\") {\n            this[`v${index}`].current.value = e.relatedTarget.innerText;\n        }\n    }\n\n    drag = (e) => {\n        if (e.target.tagName !== 'INPUT') {\n            this.props.graph.drag(e, document.querySelector('#edge_bar'), this, (_this, pos) => {\n                _this.setState({left: pos[0], top: pos[1]})\n            })\n        }\n    }\n\n    addEdge = (e) => {\n        e.preventDefault();\n        const res = this.props.graph.addEdge(this.v1.current.value, this.v2.current.value);\n        //error\n    }\n\n    render() {\n        return (\n            <form\n                onMouseDown={this.drag}\n                onTouchStart={this.drag}\n                onSubmit={(e) => this.addEdge(e)}\n                id=\"edge_bar\"\n                style={{left: this.state.left, top: this.state.top}}\n            >\n                <input\n                    ref={this.v1}\n                    placeholder=\"0\"\n                    onFocus={() => {\n                        this.v1.current.select()\n                        this.v1.current.setAttribute('tabIndex', 1);\n                        this.v2.current.setAttribute('tabIndex', 2);\n                    }}\n                    onBlur={(e) => this.focusOut(e, 1)}\n                />\n                <div\n                    onClick={() => {\n                        [this.v1.current.value, this.v2.current.value] = [this.v2.current.value, this.v1.current.value];\n                    }}\n                >+</div>\n                <input\n                    ref={this.v2}\n                    placeholder=\"1\"\n                    onFocus={() => {\n                        this.v2.current.select()\n                        this.v2.current.setAttribute('tabIndex', 1);\n                        this.v1.current.setAttribute('tabIndex', 2);\n                    }}\n                    onBlur={(e) => this.focusOut(e, 2)}\n                />\n                <button>З'єднати</button>\n            </form>\n        )\n    }\n}\n\n//=================================================================================\n//=================================================================================\n\nclass PaintButton extends React.Component {\n    constructor(props) {\n        super(props);\n        let scale = 1.0;\n        if (this.props.graph.state.mobile === true) scale *= this.props.graph.state.scale;\n\n        this.state = {\n            left: 10 * scale,\n            top: 10 * scale\n        }\n    }\n\n    drag = (e) => {\n        this.props.graph.drag(e, e.target, this, (_this, pos) => {\n            this.setState({left: pos[0], top: pos[1]});\n        })\n    }\n\n    render() {\n        return (\n            <button\n                onMouseDown={this.drag}\n                onTouchStart={this.drag}\n                onClick={this.props.graph.paintAlgo}\n                style={{\n                    left: this.state.left,\n                    top: this.state.top\n                }}\n            >Фарбувати</button>\n        )\n    }\n}\n\n//=================================================================================\n//=================================================================================\n\nexport {Graph, Node, Edge, EdgeBar, Crosshair, PaintButton};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Graph, Node, Edge, EdgeBar, Crosshair, PaintButton} from './App';\n\nconst graph = ReactDOM.render(<Graph DOMElement = {{\n    'Nodes': 'node_container',\n    'Edges': 'edge_container'\n}}/>, document.querySelector('#graph_container'));\n\nif (window.navigator.maxTouchPoints > 0) {\n    document.querySelector('#graph_container').setAttribute('mobile', true); \n    document.querySelector('#edge_bar_container').setAttribute('mobile', true);\n    document.querySelector('#paint_button').setAttribute('mobile', true);\n    document.querySelector('#copyright').setAttribute('mobile', true);\n    graph.setState({mobile: true});\n}\n\nconst edgeBar = ReactDOM.render(<EdgeBar graph={graph}/>, document.querySelector('#edge_bar_container'));\nconst paintButton = ReactDOM.render(<PaintButton graph={graph}/>, document.querySelector('#paint_button'));\n\nlet scale = 1.0;\nif (graph.state.mobile === true) scale *= graph.state.scale;\n\n//=================================================================================\n//=================================================================================\n\ndocument.onmousedown = (e) => {\n    if (e.altKey === true) graph.addNode([e.pageX - 27 * scale / 2, e.pageY - 27 * scale / 2]);\n}\n\ndocument.ondblclick = (e) => {\n    e.preventDefault();\n    if (e.target === document.body) graph.addNode([e.pageX - 27 * scale / 2, e.pageY - 27 * scale / 2]);\n}\n\nlet longTouch;\n\ndocument.ontouchstart = (e) => {\n    if (e.target.tagName === 'BODY') \n        if (e.touches.length === 1) \n            longTouch = setTimeout(() => {\n                graph.addNode([e.touches[0].pageX - 27 * scale / 2, e.touches[0].pageY - 27 * scale / 2]);\n            }, 300);\n\n    if (e.target.className === 'Edge') {\n        if (e.touches.length === 1) \n            longTouch = setTimeout(() => {\n                let event = document.createEvent('Events');\n                event.initEvent('dblclick', true, false);\n                e.target.dispatchEvent(event);\n            }, 300);\n    }\n}\n\ndocument.ontouchmove = (e) => {\n    clearTimeout(longTouch);\n}\n\ndocument.ontouchend = (e) => {\n    clearTimeout(longTouch);\n}"],"sourceRoot":""}