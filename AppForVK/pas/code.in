program d;
  uses crt;
  var w, k, x, y, side, side_count, work, steps, i_count, b: integer;
      f_in, f_out: text;
begin
  TextColor(2);
  work := 1;
  side := 1;
  i_count := 1;
  
  assign(f_in,'d.in');
  assign(f_out,'d.out');
  
  reset(f_in);
    readln(f_in,w,k);
    readln(f_in,x,y);
  close(f_in);
  
  while work = 1 do //whore 
  begin
    if side = 1 then
    begin
      for b:=1 to i_count do
      begin
        x := x + 1;
        if x > w then
        begin
          work := 0;
          //break;
        end else 
          steps := steps + 1;
      end;
      side_count := side_count + 1;
      side := side + 1;
      writeln(side_count,' ',i_count,' ',steps);
      if side_count mod 2 = 0 then
        i_count := i_count + 1;
    end else if side = 2 then
    begin
      for b:=1 to i_count do
      begin
        y := y - 1;
        if y < 1 then
        begin
          work := 0;
          //break;
        end else 
          steps := steps + 1;
      end;
      side_count := side_count + 1;
      side := side + 1;
      writeln(side_count,' ',i_count,' ',steps);
      if side_count mod 2 = 0 then
        i_count := i_count + 1;
    end else if side = 3 then
    begin
      for b:=1 to i_count do
      begin
        x := x - 1;
        if x < 1 then
        begin
          work := 0;
          //break;
        end else 
          steps := steps + 1;
      end;
      side_count := side_count + 1;
      side := side + 1;
      writeln(side_count,' ',i_count,' ',steps);
      if side_count mod 2 = 0 then
        i_count := i_count + 1;
    end else if side = 4 then
    begin
      for b:=1 to i_count do
      begin
        y := y + 1;
        if y > k then
        begin
          work := 0;
          //break;
        end else
          steps := steps + 1;
      end;
      side_count := side_count + 1;
      side := 1;
      writeln(side_count,' ',i_count,' ',steps);
      if side_count mod 2 = 0 then
        i_count := i_count + 1;
    end;
  end;
  
  rewrite(f_out);
    writeln(f_out,steps);
  close(f_out);
end.