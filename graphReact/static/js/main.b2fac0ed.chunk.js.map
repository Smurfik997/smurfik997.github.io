{"version":3,"sources":["App.js","index.js"],"names":["Mobile","React","createContext","Graph","props","nodeUpdate","index","newPosition","setState","state","nodes","left","top","nodeDelete","edges","forEach","edge","indexEdge","i","length","splice","crosshair","display","edgeDelete","crosshairState","x","y","paintAlgo","colorSeed","nodesCount","matrix","Array","fill","_","node","push","n","k","color","max","j","painted","freeNode","textColor","Math","min","colorSeedUpdate","newColorSeed","drag","e","target","_this","callback","mobile","style","cursor","crosshairPos","scale","offsetLeft","clientWidth","offsetTop","clientHeight","pointerPos","touches","pageX","pageY","document","ontouchmove","preventDefault","pos","ontouchend","onmousemove","onmouseup","position","this","v1","v2","Error","Provider","value","id","DOMElement","map","key","update","delete","enable","Component","Node","className","backgroundColor","onTouchStart","onMouseDown","onDoubleClick","console","log","Edge","angle","atan","PI","context","height","sqrt","cos","sin","transform","contextType","Crosshair","EdgeBar","focusOut","persist","relatedTarget","current","innerText","tagName","graph","querySelector","addEdge","body","createRef","onSubmit","ref","placeholder","onFocus","select","setAttribute","onBlur","onClick","PaintButton","ReactDOM","render","window","navigator","maxTouchPoints","onmousedown","altKey","addNode","ondblclick"],"mappings":"kLAGMA,EAASC,IAAMC,gBAKXC,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KA6CVC,WAAa,SAACC,EAAOC,GACjB,EAAKC,UAAS,SAACC,GAIX,OAHAA,EAAMC,MAAMJ,GAAOK,KAAOJ,EAAY,GACtCE,EAAMC,MAAMJ,GAAOM,IAAML,EAAY,GAE9BE,MAnDI,EAuDnBI,WAAa,SAACP,GACV,EAAKE,UAAS,SAACC,GACXA,EAAMK,MAAMC,SAAQ,SAACC,EAAMC,GACvBD,EAAK,KAAOV,GAASU,EAAK,KAAOV,IACjCG,EAAMK,MAAMG,GAAa,SAI7B,IADA,IAAIC,EAAI,EACDA,EAAIT,EAAMK,MAAMK,QACI,OAAnBV,EAAMK,MAAMI,GAAaT,EAAMK,MAAMM,OAAOF,EAAG,GAASA,IAMhE,OAHAT,EAAMC,MAAMJ,GAAS,KACrBG,EAAMY,UAAUC,SAAU,EAEnBb,MAtEI,EA0EnBc,WAAa,SAACjB,GACV,EAAKE,UAAS,SAACC,GAGX,OAFAA,EAAMK,MAAMM,OAAOd,EAAO,GAEnBG,MA9EI,EAkFnBY,UAAY,SAACG,EAAgBC,EAAGC,GAC5B,EAAKlB,UAAS,SAACC,GAKX,OAJIgB,IAAGhB,EAAMY,UAAUV,KAAOc,GAC1BC,IAAGjB,EAAMY,UAAUT,IAAMc,GAC7BjB,EAAMY,UAAUC,QAAUE,EAEnBf,MAxFI,EA4FnBkB,UAAY,WACR,IAAMC,EAAY,EAAKnB,MAAMmB,UAEzBlB,EAAQ,GACRmB,EAAa,EAAKpB,MAAMC,MAAMS,OAC9BL,EAAQ,EAAKL,MAAMK,MACnBgB,EAAS,IAAIC,MAAMF,GAAYG,KAAK,GACxCF,EAAOf,SAAQ,SAACkB,EAAGf,GAAJ,OAAUY,EAAOZ,GAAK,IAAIa,MAAMF,MAE/Cf,EAAMC,SAAQ,SAACC,GACXc,EAAOd,EAAK,IAAIA,EAAK,IAAM,EAC3Bc,EAAOd,EAAK,IAAIA,EAAK,IAAM,KAG/B,EAAKP,MAAMC,MAAMK,SAAQ,SAACmB,EAAMhB,GAC5B,GAAIgB,EAAM,CACNxB,EAAMyB,KAAKD,GAGX,IAFA,IAAIE,EAAI,EAECC,EAAI,EAAGA,EAAIR,EAAYQ,IACP,IAAjBP,EAAOZ,GAAGmB,IAAUD,IAE5B1B,EAAMA,EAAMS,OAAS,GAAGmB,MAAQ,KAChC5B,EAAMA,EAAMS,OAAS,GAAGb,MAAQY,EAChCR,EAAMA,EAAMS,OAAS,GAAGiB,EAAIA,MAIpC,IAAK,IAAIlB,EAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAAK,CAGnC,IAFA,IAAIqB,EAAMrB,EAEDsB,EAAItB,EAAI,EAAGsB,EAAI9B,EAAMS,OAAQqB,IAC9B9B,EAAM6B,GAAKH,EAAI1B,EAAM8B,GAAGJ,IAAGG,EAAMC,GAJN,MAMV,CAAC9B,EAAM6B,GAAM7B,EAAMQ,IAA3CR,EAAMQ,GAN4B,KAMxBR,EAAM6B,GANkB,KAWvC,IAFA,IAAID,EAAQ,EAAGG,EAAU,EAElBA,EAAU/B,EAAMS,QAAQ,CAC3BsB,EAAU,EAEV,IAAK,IAAIvB,EAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAC9B,GAAKR,EAAMQ,GAAGoB,MAWPG,QAXc,CAGjB,IAFA,IAAIC,GAAW,EAENF,EAAI,EAAGA,EAAI9B,EAAMS,OAAQqB,IAC9B,GAAI9B,EAAM8B,GAAGF,OAAS5B,EAAM8B,GAAGF,QAAUA,GAAoD,IAA3CR,EAAOpB,EAAMQ,GAAGZ,OAAOI,EAAM8B,GAAGlC,OAAc,CAC5FoC,GAAW,EACX,MAIJA,IAAUhC,EAAMQ,GAAGoB,MAAQA,GAIvCA,IAiBJ,OAdA5B,EAAMK,SAAQ,SAACmB,EAAMhB,GACjBR,EAAMQ,GAAGoB,MAAQ,CACbV,EAAU,GAAG,GAAKM,EAAKI,MAAQV,EAAU,GAAKA,EAAU,GACxDA,EAAU,GAAG,GAAKM,EAAKI,MAAQV,EAAU,GAAKA,EAAU,GACxDA,EAAU,GAAG,GAAKM,EAAKI,MAAQV,EAAU,GAAKA,EAAU,IAE5DlB,EAAMQ,GAAGyB,UAAY,CACjBC,KAAKC,IAAInC,EAAMQ,GAAGoB,MAAM,GAAKV,EAAU,GAAI,KAC3CgB,KAAKC,IAAInC,EAAMQ,GAAGoB,MAAM,GAAKV,EAAU,GAAI,KAC3CgB,KAAKC,IAAInC,EAAMQ,GAAGoB,MAAM,GAAKV,EAAU,GAAI,SAGnD,EAAKpB,SAAS,CAACE,MAAO,EAAKD,MAAMC,QAE1B4B,EAAQ,GAtKA,EAyKnBQ,gBAAkB,SAACC,GACf,EAAKvC,SAAS,CAACoB,UAAWmB,IAC1B,EAAKpB,aA3KU,EA8KnBqB,KAAO,SAACC,EAAGC,EAAQC,EAAOC,GAAsC,IAA5B5B,EAA2B,yDACjC,IAAtB,EAAKf,MAAM4C,SAAiBH,EAAOI,MAAMC,OAAS,YACtD,IAAIC,EAAe,CAAC,EAAG,GACnBC,EAAQ,EAUZ,IAR0B,IAAtB,EAAKhD,MAAM4C,SAAiBI,GAAS,EAAKhD,MAAMgD,OAEhDjC,IACAgC,EAAa,GAAKN,EAAOQ,WAAaR,EAAOS,YAAc,EAAI,GAAMF,EACrED,EAAa,GAAKN,EAAOU,UAAYV,EAAOW,aAAe,EAAI,GAAMJ,EACrE,EAAKpC,WAAU,EAAMmC,EAAa,GAAIA,EAAa,GAAIN,KAGjC,IAAtB,EAAKzC,MAAM4C,OAAiB,CAC5B,IAAMS,EAAa,CACfb,EAAEc,QAAQ,GAAGC,MAAQd,EAAOQ,WAC5BT,EAAEc,QAAQ,GAAGE,MAAQf,EAAOU,WAGhCM,SAASC,YAAc,SAAClB,GACpBA,EAAEmB,iBACF,IAAIC,EAAM,CAACpB,EAAEe,MAAQF,EAAW,GAAIb,EAAEgB,MAAQH,EAAW,IACrDO,EAAI,GAAK,IAAGA,EAAI,GAAK,GACrBA,EAAI,GAAK,IAAGA,EAAI,GAAK,GACzBb,EAAa,GAAKa,EAAI,GAAKnB,EAAOS,YAAc,EAAI,GAAMF,EAC1DD,EAAa,GAAKa,EAAI,GAAKnB,EAAOW,aAAe,EAAI,GAAMJ,EACvDjC,GAAgB,EAAKH,WAAU,EAAMmC,EAAa,GAAIA,EAAa,IACvEJ,EAASD,EAAOkB,IAGpBH,SAASI,WAAa,SAACrB,GACfzB,GAAgB,EAAKH,WAAU,GACnC6C,SAASC,YAAc,aACvBD,SAASI,WAAa,kBAEvB,CACH,IAAMR,EAAa,CACfb,EAAEe,MAAQd,EAAOQ,WACjBT,EAAEgB,MAAQf,EAAOU,WAGrBM,SAASK,YAAc,SAACtB,GACpB,IAAIoB,EAAM,CAACpB,EAAEe,MAAQF,EAAW,GAAIb,EAAEgB,MAAQH,EAAW,IACrDO,EAAI,GAAK,IAAGA,EAAI,GAAK,GACrBA,EAAI,GAAK,IAAGA,EAAI,GAAK,GACzBb,EAAa,GAAKa,EAAI,GAAKnB,EAAOS,YAAc,EAAI,GAAMF,EAC1DD,EAAa,GAAKa,EAAI,GAAKnB,EAAOW,aAAe,EAAI,GAAMJ,EACvDjC,GAAgB,EAAKH,WAAU,EAAMmC,EAAa,GAAIA,EAAa,IACvEJ,EAASD,EAAOkB,IAGpBH,SAASM,UAAY,SAACvB,GAClBC,EAAOI,MAAMC,OAAS,OAClB/B,GAAgB,EAAKH,WAAU,GACnC6C,SAASK,YAAc,aACvBL,SAASM,UAAY,gBAnO7B,EAAK/D,MAAQ,CACT,MAAS,GACT,MAAS,GACT,UAAa,CACT,QAAU,EACV,SAAW,EACX,IAAO,EACP,KAAQ,GAEZ,UAAa,CACT,CAAC,KAAM,KAAM,MACb,IACA,IACA,IAEJ,QAAU,EACV,MAAS,KAlBE,E,uEAsBS,IAApBgE,EAAmB,uDAAR,CAAC,EAAG,GACnBC,KAAKlE,UAAS,SAACC,GAMX,OALAA,EAAMC,MAAMyB,KAAK,CACbxB,KAAM8D,EAAS,GAAK,EAAGA,EAAS,GAAK,EACrC7D,IAAK6D,EAAS,GAAK,EAAGA,EAAS,GAAK,IAGjChE,O,8BAIPkE,EAAIC,GACR,GAAIF,KAAKjE,MAAMC,MAAMiE,IAAOD,KAAKjE,MAAMC,MAAMkE,IAAOD,IAAOC,EAMvD,OALAF,KAAKlE,UAAS,SAACC,GAGX,OAFAA,EAAMK,MAAMqB,KAAK,CAACwC,EAAIC,IAEfnE,KAEJ,UAGX,MAAMoE,MAAM,mE,+BA+LN,IAAD,OACL,OACI,kBAAC7E,EAAO8E,SAAR,CAAiBC,MAAO,CACpB1B,OAAQqB,KAAKjE,MAAM4C,OACnBI,MAAOiB,KAAKjE,MAAMgD,QAElB,yBAAKuB,GAAIN,KAAKtE,MAAM6E,WAAX,OACJP,KAAKjE,MAAMC,MAAMwE,KAAI,SAAChD,EAAM5B,GACzB,OAAO4B,EAAM,kBAAC,EAAD,CACTiD,IAAK7E,EACLA,MAAOA,EACPI,MAAO,EAAKD,MAAMC,MAClB0E,OAAQ,EAAK/E,WACbgF,OAAQ,EAAKxE,WACbmC,KAAM,EAAKA,KACXV,MAAOJ,EAAKI,MACZK,UAAWT,EAAKS,YACf,SAGb,yBAAKqC,GAAIN,KAAKtE,MAAM6E,WAAX,OACJP,KAAKjE,MAAMK,MAAMoE,KAAI,SAAClE,EAAMV,GAAP,OAAiB,kBAAC,EAAD,CACnC6E,IAAK7E,EACLA,MAAOA,EACP+E,OAAQ,EAAK9D,WACboD,GAAI,EAAKlE,MAAMC,MAAMM,EAAK,IAC1B4D,GAAI,EAAKnE,MAAMC,MAAMM,EAAK,UAGjC0D,KAAKjE,MAAMY,UAAUiE,QAAUZ,KAAKjE,MAAMY,UAAUC,QAAS,kBAAC,EAAD,CAC1DX,KAAM+D,KAAKjE,MAAMY,UAAUV,KAC3BC,IAAK8D,KAAKjE,MAAMY,UAAUT,IAC1BsC,OAAQwB,KAAKjE,MAAMY,UAAU6B,SAC5B,U,GA5QDjD,IAAMsF,WAqRpBC,E,YACF,WAAYpF,GAAQ,IAAD,8BACf,4CAAMA,KAGV4C,KAAO,SAACC,GACJ,EAAK7C,MAAM4C,KAAKC,EAAGA,EAAEC,OAArB,gBAAmC,SAACC,EAAOkB,GACvClB,EAAM/C,MAAMgF,OAAO,EAAKhF,MAAME,MAAO,CAAC+D,EAAI,GAAIA,EAAI,QACnD,IAPY,E,sEAUT,IAAD,OACC/B,EAAQoC,KAAKtE,MAAMkC,MACnBK,EAAY+B,KAAKtE,MAAMuC,UAE7B,OACI,4BACI8C,UAAU,OACVnC,MAAO,CACH3C,KAAM+D,KAAKtE,MAAMM,MAAMgE,KAAKtE,MAAME,OAAOK,KACzCC,IAAK8D,KAAKtE,MAAMM,MAAMgE,KAAKtE,MAAME,OAAOM,IACxC8E,gBAAiBpD,EAAM,OAAD,OAASA,EAAM,GAAf,aAAsBA,EAAM,GAA5B,aAAmCA,EAAM,GAAzC,KAAgD,GACtEA,MAAOK,EAAU,OAAD,OAASA,EAAU,GAAnB,aAA0BA,EAAU,GAApC,aAA2CA,EAAU,GAArD,KAA4D,IAEhFgD,aAAcjB,KAAK1B,KACnB4C,YAAalB,KAAK1B,KAClB6C,cAAe,SAAC5C,GACZA,EAAEmB,iBACF0B,QAAQC,IAAI,MACZ,EAAK3F,MAAMiF,OAAO,EAAKjF,MAAME,SAGhCoE,KAAKtE,MAAME,W,GAhCTL,IAAMsF,WAyCnBS,E,YAGF,WAAY5F,GAAQ,qEACVA,I,sEAGA,IAAD,SACU,CAACsE,KAAKtE,MAAMuE,GAAID,KAAKtE,MAAMwE,IAArCD,EADA,KACIC,EADJ,KAEEnD,EAASkD,EAAGhE,KAAOiE,EAAGjE,KAAnBe,EAAyBiD,EAAG/D,IAAMgE,EAAGhE,IAC3CqF,EAAQrD,KAAKsD,KAAKxE,EAAID,GACtBA,GAAK,IAAGwE,GAASrD,KAAKuD,IAC1BF,GAASrD,KAAKuD,GAAK,EAEnB,IAAI1C,EAAQ,EAGZ,OAF4B,IAAxBiB,KAAK0B,QAAQ/C,SAAiBI,GAASiB,KAAK0B,QAAQ3C,OAGpD,yBACIgC,UAAU,OACVnC,MAAO,CACH+C,OAAQzD,KAAK0D,KAAK7E,EAAEA,EAAIC,EAAEA,GAC1Bf,KAAMgE,EAAGhE,KAAO,GAAK8C,EAAQ,EAAI,EAAIb,KAAK2D,IAAIN,GAASxC,EACvD7C,IAAK+D,EAAG/D,IAAM,GAAK6C,EAAQ,EAAI,EAAIb,KAAK4D,IAAIP,GAASxC,EACrDgD,UAAU,UAAD,OAAYR,EAAZ,SAEbJ,cAAe,kBAAM,EAAKzF,MAAMiF,OAAO,EAAKjF,MAAME,c,GA1B/CL,IAAMsF,WAAnBS,EACKU,YAAc1G,E,IAkCnB2G,E,YACF,WAAYvG,GAAQ,qEACVA,I,sEAIN,OACI,6BACI,yBAAK4E,GAAG,gBAAgB1B,MAAO,CAAC3C,KAAM+D,KAAKtE,MAAMO,QACjD,yBAAKqE,GAAG,sBAAsB1B,MAAO,CAAC1C,IAAK8D,KAAKtE,MAAMQ,Y,GAT9CX,IAAMsF,WAkBxBqB,E,YACF,WAAYxG,GAAQ,IAAD,uBACf,4CAAMA,KAYVyG,SAAW,SAAC5D,EAAG3C,GACX2C,EAAE6D,UAEE7D,EAAE8D,eAA+C,SAA9B9D,EAAE8D,cAActB,YACnC,aAASnF,IAAS0G,QAAQjC,MAAQ9B,EAAE8D,cAAcE,YAjBvC,EAqBnBjE,KAAO,SAACC,GACqB,UAArBA,EAAEC,OAAOgE,SACT,EAAK9G,MAAM+G,MAAMnE,KAAKC,EAAGiB,SAASkD,cAAc,aAAhD,gBAAoE,SAACjE,EAAOkB,GACxElB,EAAM3C,SAAS,CAACG,KAAM0D,EAAI,GAAIzD,IAAKyD,EAAI,SAxBhC,EA6BnBgD,QAAU,SAACpE,GACPA,EAAEmB,iBACU,EAAKhE,MAAM+G,MAAME,QAAQ,EAAK1C,GAAGqC,QAAQjC,MAAO,EAAKH,GAAGoC,QAAQjC,QA7B5E,IAAItB,EAAQ,EAFG,OAGuB,IAAlC,EAAKrD,MAAM+G,MAAM1G,MAAM4C,SAAiBI,GAAS,EAAKrD,MAAM+G,MAAM1G,MAAMgD,OAE5E,EAAKhD,MAAQ,CACTE,KAAM,EAAKP,MAAM+G,MAAM1G,MAAM4C,OAAQa,SAASoD,KAAK3D,YAAc,IAAMF,GAASS,SAASoD,KAAK3D,YAAc,KAAO,EACnH/C,IAAK,GAAK6C,GAEd,EAAKkB,GAAK1E,IAAMsH,YAChB,EAAK3C,GAAK3E,IAAMsH,YAVD,E,sEAmCT,IAAD,OACL,OACI,0BACI3B,YAAalB,KAAK1B,KAClB2C,aAAcjB,KAAK1B,KACnBwE,SAAU,SAACvE,GAAD,OAAO,EAAKoE,QAAQpE,IAC9B+B,GAAG,WACH1B,MAAO,CAAC3C,KAAM+D,KAAKjE,MAAME,KAAMC,IAAK8D,KAAKjE,MAAMG,MAE/C,2BACI6G,IAAK/C,KAAKC,GACV+C,YAAY,IACZC,QAAS,WACL,EAAKhD,GAAGqC,QAAQY,SAChB,EAAKjD,GAAGqC,QAAQa,aAAa,WAAY,GACzC,EAAKjD,GAAGoC,QAAQa,aAAa,WAAY,IAE7CC,OAAQ,SAAC7E,GAAD,OAAO,EAAK4D,SAAS5D,EAAG,MAEpC,yBACI8E,QAAS,WAAO,IAAD,EACsC,CAAC,EAAKnD,GAAGoC,QAAQjC,MAAO,EAAKJ,GAAGqC,QAAQjC,OAAxF,EAAKJ,GAAGqC,QAAQjC,MADN,KACa,EAAKH,GAAGoC,QAAQjC,MAD7B,OADnB,KAKA,2BACI0C,IAAK/C,KAAKE,GACV8C,YAAY,IACZC,QAAS,WACL,EAAK/C,GAAGoC,QAAQY,SAChB,EAAKhD,GAAGoC,QAAQa,aAAa,WAAY,GACzC,EAAKlD,GAAGqC,QAAQa,aAAa,WAAY,IAE7CC,OAAQ,SAAC7E,GAAD,OAAO,EAAK4D,SAAS5D,EAAG,MAEpC,oF,GAtEMhD,IAAMsF,WA+EtByC,E,YACF,WAAY5H,GAAQ,IAAD,uBACf,4CAAMA,KAUV4C,KAAO,SAACC,GACJ,EAAK7C,MAAM+G,MAAMnE,KAAKC,EAAGA,EAAEC,OAA3B,gBAAyC,SAACC,EAAOkB,GAC7C,EAAK7D,SAAS,CAACG,KAAM0D,EAAI,GAAIzD,IAAKyD,EAAI,SAX1C,IAAIZ,EAAQ,EAFG,OAGuB,IAAlC,EAAKrD,MAAM+G,MAAM1G,MAAM4C,SAAiBI,GAAS,EAAKrD,MAAM+G,MAAM1G,MAAMgD,OAE5E,EAAKhD,MAAQ,CACTE,KAAM,GAAK8C,EACX7C,IAAK,GAAK6C,GAPC,E,sEAkBf,OACI,4BACImC,YAAalB,KAAK1B,KAClB2C,aAAcjB,KAAK1B,KACnB+E,QAASrD,KAAKtE,MAAM+G,MAAMxF,UAC1B2B,MAAO,CACH3C,KAAM+D,KAAKjE,MAAME,KACjBC,IAAK8D,KAAKjE,MAAMG,MANxB,8D,GApBcX,IAAMsF,WCtc9B4B,EAAQc,IAASC,OAAO,kBAAC,EAAD,CAAOjD,WAAc,CAC/C,MAAS,iBACT,MAAS,oBACPf,SAASkD,cAAc,qBAEzBe,OAAOC,UAAUC,eAAiB,IAClCnE,SAASkD,cAAc,oBAAoBS,aAAa,UAAU,GAClE3D,SAASkD,cAAc,uBAAuBS,aAAa,UAAU,GACrE3D,SAASkD,cAAc,iBAAiBS,aAAa,UAAU,GAC/D3D,SAASkD,cAAc,cAAcS,aAAa,UAAU,GAC5DV,EAAM3G,SAAS,CAAC6C,QAAQ,KAGZ4E,IAASC,OAAO,kBAAC,EAAD,CAASf,MAAOA,IAAUjD,SAASkD,cAAc,wBAC7Da,IAASC,OAAO,kBAAC,EAAD,CAAaf,MAAOA,IAAUjD,SAASkD,cAAc,kBADzF,IAGI3D,EAAQ,GACe,IAAvB0D,EAAM1G,MAAM4C,SAAiBI,GAAS0D,EAAM1G,MAAMgD,OAEtDS,SAASoE,YAAc,SAACrF,IACH,IAAbA,EAAEsF,QAAiBpB,EAAMqB,QAAQ,CAACvF,EAAEe,MAAQ,GAAKP,EAAQ,EAAGR,EAAEgB,MAAQ,GAAKR,EAAQ,KAG3FS,SAASuE,WAAa,SAACxF,GACfA,EAAEC,SAAWgB,SAASoD,MAAMH,EAAMqB,QAAQ,CAACvF,EAAEe,MAAQ,GAAKP,EAAQ,EAAGR,EAAEgB,MAAQ,GAAKR,EAAQ,M","file":"static/js/main.b2fac0ed.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Mobile = React.createContext();\n\n//=================================================================================\n//=================================================================================\n\n    class Graph extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                'nodes': [],\n                'edges': [],\n                'crosshair': {\n                    'enable': true,\n                    'display': false,\n                    'top': 0,\n                    'left': 0\n                },\n                'colorSeed': [\n                    [1867, 4931, 6073],\n                    131,\n                    110,\n                    80\n                ],\n                'mobile': false,\n                'scale': 2.7\n            }\n        }\n\n        addNode(position = [0, 0]) {\n            this.setState((state) => {\n                state.nodes.push({\n                    left: position[0] > 0? position[0] : 0,\n                    top: position[1] > 0? position[1] : 0\n                });\n\n                return state;\n            });\n        }\n\n        addEdge(v1, v2) {\n            if (this.state.nodes[v1] && this.state.nodes[v2] && v1 !== v2) {\n                this.setState((state) => {\n                    state.edges.push([v1, v2]);\n\n                    return state;\n                });\n                return 'success';\n            }\n\n            throw Error('Саша ИЗВИНИ');\n        }\n\n        nodeUpdate = (index, newPosition) => {\n            this.setState((state) => {\n                state.nodes[index].left = newPosition[0];\n                state.nodes[index].top = newPosition[1];\n\n                return state;\n            });\n        }\n\n        nodeDelete = (index) => {\n            this.setState((state) => {\n                state.edges.forEach((edge, indexEdge) => {\n                if (edge[0] === index || edge[1] === index)\n                    state.edges[indexEdge] = null;\n                })\n\n                let i = 0\n                while (i < state.edges.length) {\n                    if (state.edges[i] === null) state.edges.splice(i, 1); else i++;\n                }\n\n                state.nodes[index] = null;\n                state.crosshair.display = false;\n\n                return state;\n            });\n        }\n\n        edgeDelete = (index) => {\n            this.setState((state) => {\n                state.edges.splice(index, 1);\n\n                return state;\n            });\n        }\n\n        crosshair = (crosshairState, x, y) => {\n            this.setState((state) => {\n                if (x) state.crosshair.left = x;\n                if (y) state.crosshair.top = y;\n                state.crosshair.display = crosshairState;   \n\n                return state;\n            });\n        }\n\n        paintAlgo = () => {\n            const colorSeed = this.state.colorSeed;\n\n            let nodes = [],\n                nodesCount = this.state.nodes.length,\n                edges = this.state.edges;\n            let matrix = new Array(nodesCount).fill(0);\n            matrix.forEach((_, i) => matrix[i] = new Array(nodesCount));\n\n            edges.forEach((edge) => {\n                matrix[edge[0]][edge[1]] = 1;\n                matrix[edge[1]][edge[0]] = 1;\n            })\n\n            this.state.nodes.forEach((node, i) => {\n                if (node) {\n                    nodes.push(node);\n                    let n = 0;\n\n                    for (let k = 0; k < nodesCount; k++)\n                        if (matrix[i][k] === 1) n++;\n\n                    nodes[nodes.length - 1].color = null;\n                    nodes[nodes.length - 1].index = i;\n                    nodes[nodes.length - 1].n = n;\n                }\n            });\n\n            for (let i = 0; i < nodes.length; i++) {\n                let max = i;\n\n                for (let j = i + 1; j < nodes.length; j++)\n                    if (nodes[max].n < nodes[j].n) max = j;\n\n                [nodes[i], nodes[max]] = [nodes[max], nodes[i]];\n            }\n\n            let color = 1, painted = 0;\n            \n            while (painted < nodes.length) {\n                painted = 0;\n\n                for (let i = 0; i < nodes.length; i++) {\n                    if (!nodes[i].color) {\n                        let freeNode = true;\n\n                        for (let j = 0; j < nodes.length; j++) {\n                            if (nodes[j].color && nodes[j].color === color && matrix[nodes[i].index][nodes[j].index] === 1) {\n                                freeNode = false;\n                                break;\n                            }\n                        }\n\n                        if (freeNode) nodes[i].color = color;\n                    } else painted++;\n                }\n\n                color++;\n            }\n\n            nodes.forEach((node, i) => {\n                nodes[i].color = [\n                    colorSeed[0][0] * node.color % colorSeed[1] + colorSeed[2], \n                    colorSeed[0][1] * node.color % colorSeed[1] + colorSeed[2], \n                    colorSeed[0][2] * node.color % colorSeed[1] + colorSeed[2]\n                ];\n                nodes[i].textColor = [\n                    Math.min(nodes[i].color[0] + colorSeed[3], 255), \n                    Math.min(nodes[i].color[1] + colorSeed[3], 255), \n                    Math.min(nodes[i].color[2] + colorSeed[3], 255)\n                ];\n            });\n            this.setState({nodes: this.state.nodes});\n\n            return color - 2;\n        }\n\n        colorSeedUpdate = (newColorSeed) => {\n            this.setState({colorSeed: newColorSeed});\n            this.paintAlgo();\n        }\n\n        drag = (e, target, _this, callback, crosshairState = false) => {\n            if (this.state.mobile !== true) target.style.cursor = 'grabbing';\n            let crosshairPos = [0, 0],\n                scale = 1.0;\n\n            if (this.state.mobile === true) scale *= this.state.scale;\n\n            if (crosshairState) {\n                crosshairPos[0] = target.offsetLeft + target.clientWidth / 2 - 0.8 * scale;\n                crosshairPos[1] = target.offsetTop + target.clientHeight / 2 - 0.8 * scale;\n                this.crosshair(true, crosshairPos[0], crosshairPos[1], target);\n            }\n\n            if (this.state.mobile === true) {\n                const pointerPos = [\n                    e.touches[0].pageX - target.offsetLeft,\n                    e.touches[0].pageY - target.offsetTop\n                ];\n\n                document.ontouchmove = (e) => {\n                    e.preventDefault();\n                    let pos = [e.pageX - pointerPos[0], e.pageY - pointerPos[1]];\n                    if (pos[0] < 0) pos[0] = 0;\n                    if (pos[1] < 0) pos[1] = 0;\n                    crosshairPos[0] = pos[0] + target.clientWidth / 2 - 0.8 * scale;\n                    crosshairPos[1] = pos[1] + target.clientHeight / 2 - 0.8 * scale;\n                    if (crosshairState) this.crosshair(true, crosshairPos[0], crosshairPos[1]);\n                    callback(_this, pos);\n                }\n\n                document.ontouchend = (e) => {\n                    if (crosshairState) this.crosshair(false);\n                    document.ontouchmove = () => {}\n                    document.ontouchend = () => {}\n                }\n            } else {\n                const pointerPos = [\n                    e.pageX - target.offsetLeft,\n                    e.pageY - target.offsetTop\n                ];\n\n                document.onmousemove = (e) => {\n                    let pos = [e.pageX - pointerPos[0], e.pageY - pointerPos[1]];\n                    if (pos[0] < 0) pos[0] = 0;\n                    if (pos[1] < 0) pos[1] = 0;\n                    crosshairPos[0] = pos[0] + target.clientWidth / 2 - 0.8 * scale;\n                    crosshairPos[1] = pos[1] + target.clientHeight / 2 - 0.8 * scale;\n                    if (crosshairState) this.crosshair(true, crosshairPos[0], crosshairPos[1]);\n                    callback(_this, pos);\n                }\n\n                document.onmouseup = (e) => {\n                    target.style.cursor = 'grab';\n                    if (crosshairState) this.crosshair(false);\n                    document.onmousemove = () => {}\n                    document.onmouseup = () => {}\n                }\n            }\n        }\n\n        render() {\n            return (\n                <Mobile.Provider value={{\n                    mobile: this.state.mobile,\n                    scale: this.state.scale\n                }}>\n                    <div id={this.props.DOMElement['Nodes']}>\n                        {this.state.nodes.map((node, index) => {\n                            return node? <Node\n                                key={index} \n                                index={index} \n                                nodes={this.state.nodes} \n                                update={this.nodeUpdate} \n                                delete={this.nodeDelete}\n                                drag={this.drag}\n                                color={node.color}\n                                textColor={node.textColor}\n                            /> : null;\n                        })}\n                    </div>\n                    <div id={this.props.DOMElement['Edges']}>\n                        {this.state.edges.map((edge, index) => <Edge\n                            key={index} \n                            index={index} \n                            delete={this.edgeDelete}\n                            v1={this.state.nodes[edge[0]]} \n                            v2={this.state.nodes[edge[1]]}\n                        />)}\n                    </div>\n                    {this.state.crosshair.enable && this.state.crosshair.display? <Crosshair\n                        left={this.state.crosshair.left}\n                        top={this.state.crosshair.top}\n                        target={this.state.crosshair.target}\n                    /> : null}\n                </Mobile.Provider>\n            )\n        }\n    }\n\n//=================================================================================\n//=================================================================================\n\n    class Node extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        drag = (e) => {\n            this.props.drag(e, e.target, this, (_this, pos) => {\n                _this.props.update(this.props.index, [pos[0], pos[1]]);\n            }, true)\n        }\n        \n        render() {\n            const color = this.props.color,\n                  textColor = this.props.textColor;\n\n            return (\n                <button\n                    className='Node'\n                    style={{\n                        left: this.props.nodes[this.props.index].left,\n                        top: this.props.nodes[this.props.index].top,\n                        backgroundColor: color? `rgb(${color[0]}, ${color[1]}, ${color[2]})`: '',\n                        color: textColor? `rgb(${textColor[0]}, ${textColor[1]}, ${textColor[2]})`: ''\n                    }}\n                    onTouchStart={this.drag}\n                    onMouseDown={this.drag}\n                    onDoubleClick={(e) => {\n                        e.preventDefault();\n                        console.log('dd');\n                        this.props.delete(this.props.index)}\n                    }\n                >\n                    {this.props.index}\n                </button> \n            )\n        }\n    }\n\n//=================================================================================\n//=================================================================================\n\n    class Edge extends React.Component {\n        static contextType = Mobile;\n\n        constructor(props) {\n            super(props);\n        }\n\n        render() {\n            let [v1, v2] = [this.props.v1, this.props.v2];\n            const [x, y] = [v1.left - v2.left, v1.top - v2.top];\n            let angle = Math.atan(y / x);\n            if (x >= 0) angle += Math.PI;\n            angle -= Math.PI / 2;\n\n            let scale = 1.0;\n            if (this.context.mobile === true) scale *= this.context.scale;\n\n            return (\n                <div\n                    className='Edge'\n                    style={{\n                        height: Math.sqrt(x*x + y*y),\n                        left: v1.left + 27 * scale / 2 - 2 * Math.cos(angle) * scale,\n                        top: v1.top + 27 * scale / 2 - 2 * Math.sin(angle) * scale,\n                        transform: `rotate(${angle}rad)`\n                    }}\n                    onDoubleClick={() => this.props.delete(this.props.index)}\n                />\n            )\n        }\n    }\n\n//=================================================================================\n//=================================================================================\n\n    class Crosshair extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        render() {\n            return (\n                <div>\n                    <div id=\"crosshairVert\" style={{left: this.props.left}}/>\n                    <div id=\"crosshairHorizontal\" style={{top: this.props.top}}/>\n                </div>\n            )\n        }\n    }\n\n//=================================================================================\n//=================================================================================\n\n    class EdgeBar extends React.Component {\n        constructor(props) {\n            super(props);\n            let scale = 1.0;\n            if (this.props.graph.state.mobile === true) scale *= this.props.graph.state.scale;\n\n            this.state = {\n                left: this.props.graph.state.mobile? document.body.clientWidth - 130 * scale : (document.body.clientWidth - 120) / 2,\n                top: 10 * scale\n            }\n            this.v1 = React.createRef();\n            this.v2 = React.createRef();\n        }\n\n        focusOut = (e, index) => {\n            e.persist();\n\n            if (e.relatedTarget && e.relatedTarget.className === \"Node\") {\n                this[`v${index}`].current.value = e.relatedTarget.innerText;\n            }\n        }\n\n        drag = (e) => {\n            if (e.target.tagName !== 'INPUT') {\n                this.props.graph.drag(e, document.querySelector('#edge_bar'), this, (_this, pos) => {\n                    _this.setState({left: pos[0], top: pos[1]})\n                })\n            }\n        }\n\n        addEdge = (e) => {\n            e.preventDefault();\n            const res = this.props.graph.addEdge(this.v1.current.value, this.v2.current.value);\n            //error\n        }\n\n        render() {\n            return (\n                <form\n                    onMouseDown={this.drag}\n                    onTouchStart={this.drag}\n                    onSubmit={(e) => this.addEdge(e)}\n                    id=\"edge_bar\"\n                    style={{left: this.state.left, top: this.state.top}}\n                >\n                    <input\n                        ref={this.v1}\n                        placeholder=\"0\"\n                        onFocus={() => {\n                            this.v1.current.select()\n                            this.v1.current.setAttribute('tabIndex', 1);\n                            this.v2.current.setAttribute('tabIndex', 2);\n                        }}\n                        onBlur={(e) => this.focusOut(e, 1)}\n                    />\n                    <div\n                        onClick={() => {\n                            [this.v1.current.value, this.v2.current.value] = [this.v2.current.value, this.v1.current.value];\n                        }}\n                    >+</div>\n                    <input\n                        ref={this.v2}\n                        placeholder=\"1\"\n                        onFocus={() => {\n                            this.v2.current.select()\n                            this.v2.current.setAttribute('tabIndex', 1);\n                            this.v1.current.setAttribute('tabIndex', 2);\n                        }}\n                        onBlur={(e) => this.focusOut(e, 2)}\n                    />\n                    <button>З'єднати</button>\n                </form>\n            )\n        }\n    }\n\n//=================================================================================\n//=================================================================================\n\n    class PaintButton extends React.Component {\n        constructor(props) {\n            super(props);\n            let scale = 1.0;\n            if (this.props.graph.state.mobile === true) scale *= this.props.graph.state.scale;\n\n            this.state = {\n                left: 10 * scale,\n                top: 10 * scale\n            }\n        }\n\n        drag = (e) => {\n            this.props.graph.drag(e, e.target, this, (_this, pos) => {\n                this.setState({left: pos[0], top: pos[1]});\n            })\n        }\n\n        render() {\n            return (\n                <button\n                    onMouseDown={this.drag}\n                    onTouchStart={this.drag}\n                    onClick={this.props.graph.paintAlgo}\n                    style={{\n                        left: this.state.left,\n                        top: this.state.top\n                    }}\n                >Фарбувати</button>\n            )\n        }\n    }\n\n//=================================================================================\n//=================================================================================\n\nexport {Graph, Node, Edge, EdgeBar, Crosshair, PaintButton};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Graph, Node, Edge, EdgeBar, Crosshair, PaintButton} from './App';\n\nconst graph = ReactDOM.render(<Graph DOMElement = {{\n    'Nodes': 'node_container',\n    'Edges': 'edge_container'\n}}/>, document.querySelector('#graph_container'));\n\nif (window.navigator.maxTouchPoints > 0) {\n    document.querySelector('#graph_container').setAttribute('mobile', true); \n    document.querySelector('#edge_bar_container').setAttribute('mobile', true);\n    document.querySelector('#paint_button').setAttribute('mobile', true);\n    document.querySelector('#copyright').setAttribute('mobile', true);\n    graph.setState({mobile: true});\n}\n\nconst edgeBar = ReactDOM.render(<EdgeBar graph={graph}/>, document.querySelector('#edge_bar_container'));\nconst paintButton = ReactDOM.render(<PaintButton graph={graph}/>, document.querySelector('#paint_button'));\n\nlet scale = 1.0;\nif (graph.state.mobile === true) scale *= graph.state.scale;\n\ndocument.onmousedown = (e) => {\n    if (e.altKey === true) graph.addNode([e.pageX - 27 * scale / 2, e.pageY - 27 * scale / 2]);\n}\n\ndocument.ondblclick = (e) => {\n    if (e.target === document.body) graph.addNode([e.pageX - 27 * scale / 2, e.pageY - 27 * scale / 2]);\n}"],"sourceRoot":""}